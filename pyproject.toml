[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "signaljourney_validator"
version = "0.1.0"
authors = [
  { name="Seyed Yahya Shirazi", email="shirazi@ieee.org" }
]
description = "A Python library to validate signalJourney JSON files against the official specification schema."
readme = "src/signaljourney_validator/README.md" # Point to the package README
license = {text = "MIT License"} # Explicitly state license
requires-python = ">=3.8"
keywords = ["signaljourney", "schema", "validation", "provenance", "biosignal", "neuroscience"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "jsonschema>=4.0",
    "click>=8.0"
]

[project.urls]
"Homepage" = "https://github.com/signal-journey/specification"
"Repository" = "https://github.com/signal-journey/specification" # Added Repository URL
"Bug Tracker" = "https://github.com/signal-journey/specification/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "mypy>=1.0",
    "ruff>=0.1.0", # Combines flake8, black, isort etc. - recommended
    "fuzzywuzzy>=0.18", # For suggestions
    "python-Levenshtein>=0.12", # Optional but improves fuzzywuzzy speed
    "build", # For building the package
    "twine" # For uploading to PyPI
]
suggestions = [
    "fuzzywuzzy>=0.18",
    "python-Levenshtein>=0.12"
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.scripts]
signaljourney-validate = "signaljourney_validator.cli:cli"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 88
select = ["E", "F", "W", "I"]

[tool.mypy]
strict = true 